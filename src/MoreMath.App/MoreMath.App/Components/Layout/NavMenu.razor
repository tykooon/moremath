@implements IDisposable
@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<nav class="navbar">
    <button class="navbar__btn" @onclick="OpenSidebar"></button>
    <div class="navbar__content @SidebarVisibility">
        <div class="navbar__overlay"></div>
        <div class="navbar__scroll">
            <div class="navbar__close">
                <i class="fas fa-times" @onclick="CloseSidebar"></i>
            </div>
            <ul class="navbar__list">
                <li>
                    <NavLink href="/" Match="NavLinkMatch.All"  @onclick="CloseSidebar">
                        <MdIcon Name="home" /><span class="hide-on-lg">&nbsp;Главная</span>
                    </NavLink>
                </li>
                <NavDropdown Title="Занятия" Prefix="lessons" OnLinkClicked=@CloseSidebar
                    NavDropdownList=@(new NavDropdown.NavDropdownItem[] {
                        new(Roots.Bagrut, "Багрут", Icons.Bagrut),
                        new(Roots.QuickHelp, "Скорая Помощь", Icons.QuickHelp),
                        new(Roots.Olympics, "Олимпиады", Icons.Olympics)
                    }) @ref=Lessons/>
                <NavDropdown Title="Статьи" Prefix="articles" OnLinkClicked=@CloseSidebar
                    NavDropdownList=@(new NavDropdown.NavDropdownItem[] {
                         new(Roots.Mathematics, "Математика", Icons.Mathematics),
                         new(Roots.MathHebrew, "Математический иврит", Icons.MathHebrew),
                         new(Roots.Blog, "Заметки на полях", Icons.Blog)
                    }) @ref=Articles />
                <NavDropdown Title="О проекте" Prefix="about" OnLinkClicked=@CloseSidebar
                    NavDropdownList=@(new NavDropdown.NavDropdownItem[] {
                        new(Roots.Team, "Команда", Icons.Team),
                        new(Roots.Contacts, "Контакты", Icons.Contacts)
                    }) @ref=About />
                <li>
                    <AuthorizeView>
                        <NotAuthorized>
                            <div class="navbar__login">
                                <NavLink href="Account/Login">Войти</NavLink>
                            </div>
                        </NotAuthorized>
                        <Authorized>
                            Welcome!
                            @* TODO: User Dropdown Submenu for account managment *@
                        </Authorized>
                    </AuthorizeView>
                </li>
            </ul>
        </div>
    </div>
</nav>


@code {
    private string? currentUrl;

    private bool isExpandedSidebar = false;
    private string SidebarVisibility => isExpandedSidebar ? "visible" : "";

    private void OpenSidebar() => SetSidebar(true);

    private void CloseSidebar()
    {
        Lessons.HideContent();
        Articles.HideContent();
        About.HideContent();
        SetSidebar(false);
    }

    private void SetSidebar(bool expand)
    {
        isExpandedSidebar = expand;
    }

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private NavDropdown Lessons { get; set; } = null!;
    private NavDropdown Articles { get; set; } = null!;
    private NavDropdown About { get; set; } = null!;

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

